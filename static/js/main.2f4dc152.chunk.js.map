{"version":3,"sources":["styles/globalStyles.js","styles/Theme.js","components/Navbar.js","features/forecast/forecastSlice.js","components/SearchBar.js","hooks/useDebounce.js","styles/Devices.js","features/forecast/CurrentForecast.js","features/forecast/FutureForecast.js","components/Loader.js","features/forecast/Forecast.js","components/pages/HomePage.js","components/App.js","reportWebVitals.js","store.js","index.js"],"names":["GlobalStyle","createGlobalStyle","props","theme","colors","lightGray","Container","styled","div","Title","h1","dark","fontSizes","medium","light","accent","gray","small","large","xlarge","Theme","children","NavWrapper","nav","Logo","Navbar","getForecast","createAsyncThunk","city","a","fetch","process","response","json","result","status","data","getCitySuggestions","query","forecastSlice","createSlice","name","initialState","citySuggestions","error","reducers","clearSuggestions","state","action","extraReducers","pending","fulfilled","payload","rejected","message","actions","selectForecast","forecast","selectAllSuggestions","SearchContainer","section","SearchInput","input","SearchButton","button","disabled","Suggestion","li","SearchBar","changeCity","dispatch","useDispatch","useState","setInput","useSelector","debouncedInput","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","renderedSuggestions","map","suggestion","onClick","handleSuggestionClick","id","type","placeholder","onChange","e","target","preventDefault","Devices","DataContainer","Icon","img","Temp","Label","p","Value","CurrentForecast","src","condition","icon","alt","text","temp_c","feelslike_c","pressure_mb","wind_kph","TableContainer","Table","table","Header","thead","Row","tr","TableHeading","th","TableData","td","FutureForecast","renderedRows","date","day","avgtemp_c","daily_chance_of_rain","maxwind_kph","date_epoch","LoaderContainer","Loader","size","loading","color","ForecastContainer","Forecast","content","forecastData","forecastStatus","location","country","current","last_updated","forecastday","length","slice","PageContent","HomePage","setCity","newCity","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","forecastReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f4dc152.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport styled from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n        margin: 0;\n        padding: 0;\n        font-family: \"Nunito\", sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        background-color: ${(props) => props.theme.colors.lightGray}\n    }\n    p,h1 {\n      padding: 0;\n      margin: 0;\n    }\n    ul {\n      padding: 0;\n      margin: 0;\n      list-style: none;\n    }\n    table,th,td {\n      border-collapse: collapse;      \n      text-align: left;\n    }\n`;\n\nexport const Container = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 0 2rem;\n`;\n\nexport const Title = styled.h1`\n  color: ${(props) => props.theme.colors.dark};\n  font-size: ${(props) => props.theme.fontSizes.medium};\n  font-weight: 400;\n`;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle } from \"./globalStyles\";\nimport PropTypes from \"prop-types\";\n\nconst theme = {\n  colors: {\n    dark: \"#1a1a1a\",\n    light: \"#fcfcfc\",\n    accent: \"#1AA73A\",\n    lightGray: \"#F9F9F9\",\n    gray: \"#AAAAAA\",\n  },\n  fontSizes: {\n    small: \"1rem\",\n    medium: \"1.5rem\",\n    large: \"2rem\",\n    xlarge: \"3rem\",\n  },\n};\n\nexport const Theme = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <GlobalStyle />\n        {children}\n      </>\n    </ThemeProvider>\n  );\n};\n\nTheme.propTypes = {\n  children: PropTypes.object,\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"../styles/globalStyles\";\n\nconst NavWrapper = styled.nav`\n  width: 100%;\n  height: 80px;\n  background-color: ${(props) => props.theme.colors.light};\n  display: flex;\n  align-items: center;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n`;\n\nconst Logo = styled.h1`\n  font-weight: bold;\n  font-size: ${(props) => props.theme.fontSizes.large};\n  color: ${(props) => props.theme.colors.dark};\n`;\n\nexport const Navbar = () => {\n  return (\n    <NavWrapper>\n      <Container>\n        <Logo>WeatherForecast</Logo>\n      </Container>\n    </NavWrapper>\n  );\n};\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  status: \"idle\",\n  data: {},\n  citySuggestions: [],\n  error: null,\n};\n\nexport const getForecast = createAsyncThunk(\"forecast/getForecast\", async (city) => {\n  const response = await fetch(\n    `https://api.weatherapi.com/v1/forecast.json?key=${process.env.REACT_APP_API_KEY}&q=${city}&days=3`\n  );\n  const result = await response.json();\n\n  return { status: response.status, data: result };\n});\n\nexport const getCitySuggestions = createAsyncThunk(\"forecast/getCitySuggestions\", async (query) => {\n  const response = await fetch(\n    `https://api.weatherapi.com/v1/search.json?key=${process.env.REACT_APP_API_KEY}&q=${query}`\n  );\n  const result = await response.json();\n\n  return { status: response.status, data: result };\n});\n\nconst forecastSlice = createSlice({\n  name: \"forecast\",\n  initialState,\n  reducers: {\n    clearSuggestions: (state, action) => {\n      state.citySuggestions = [];\n    },\n  },\n  extraReducers: {\n    [getForecast.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getForecast.fulfilled]: (state, action) => {\n      const { status, data } = action.payload;\n      if (status === 200) {\n        state.status = \"succeeded\";\n        state.data = data;\n      } else {\n        state.status = \"failed\";\n        state.error = \"Something went wrong, please try again\";\n      }\n    },\n    [getForecast.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    },\n\n    [getCitySuggestions.fulfilled]: (state, action) => {\n      state.citySuggestions = action.payload.data;\n    },\n  },\n});\n\nexport const { clearSuggestions } = forecastSlice.actions;\n\nexport default forecastSlice.reducer;\n\nexport const selectForecast = (state) => state.forecast.data;\n\nexport const selectAllSuggestions = (state) => state.forecast.citySuggestions;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useDebounce } from \"../hooks/useDebounce\";\nimport {\n  selectAllSuggestions,\n  getCitySuggestions,\n  clearSuggestions,\n} from \"../features/forecast/forecastSlice\";\n\nconst SearchContainer = styled.section`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 50px;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  height: 100%;\n  padding: 0 15px;\n  border-radius: 10px;\n  border: 1px solid ${(props) => props.theme.colors.dark};\n  font-size: ${(props) => props.theme.fontSizes.small};\n  outline: none;\n  font-family: \"Nunito\";\n`;\n\nconst SearchButton = styled.button`\n  padding: 0 1rem;\n  height: 100%;\n  margin-left: 0.5rem;\n  color: ${(props) => props.theme.colors.light};\n  background-color: ${(props) => props.theme.colors.accent};\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  font-weight: bold;\n  font-size: ${(props) => props.theme.fontSizes.small};\n  cursor: ${(props) => (props.disabled ? \"no-drop\" : \"pointer\")};\n  transition: all 0.3s ease-in-out;\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n\n  &:hover {\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.8)};\n  }\n`;\n\nconst Suggestion = styled.li`\n  padding: 0.5rem;\n  color: ${(props) => props.theme.colors.dark};\n\n  &:hover {\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.accent};\n  }\n`;\n\nexport const SearchBar = ({ changeCity }) => {\n  const dispatch = useDispatch();\n\n  const [input, setInput] = useState(\"\");\n  const citySuggestions = useSelector(selectAllSuggestions);\n\n  // Debounce search query input to avoid unnecessary api calls\n  const debouncedInput = useDebounce(input, 200);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSearchClick = (e) => {\n    e.preventDefault();\n\n    if (input) {\n      dispatch(clearSuggestions());\n      changeCity(input);\n      setInput(\"\");\n    }\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    dispatch(clearSuggestions());\n    changeCity(suggestion);\n    setInput(\"\");\n  };\n\n  // Fetch all city suggestions when input changes\n  useEffect(() => {\n    if (debouncedInput) {\n      dispatch(getCitySuggestions(debouncedInput));\n    }\n  }, [debouncedInput, dispatch]);\n\n  const renderedSuggestions = citySuggestions.map((suggestion) => (\n    <Suggestion key={suggestion.id} onClick={() => handleSuggestionClick(suggestion.name)}>\n      {suggestion.name}\n    </Suggestion>\n  ));\n\n  return (\n    <>\n      <form>\n        <SearchContainer>\n          <SearchInput\n            type=\"text\"\n            placeholder=\"City...\"\n            onChange={handleInputChange}\n            value={input}\n          />\n          <SearchButton disabled={input === \"\"} type=\"submit\" onClick={handleSearchClick}>\n            Search\n          </SearchButton>\n        </SearchContainer>\n      </form>\n      <ul>{renderedSuggestions}</ul>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  changeCity: PropTypes.func,\n};\n","import { useState, useEffect } from \"react\";\n\n// Custom hook for debouncing\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","export const Devices = {\n  mobile: `(max-width: 768px)`,\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { Devices } from \"../../styles/Devices\";\n\nconst DataContainer = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  margin: 2rem 0;\n\n  @media ${Devices.mobile} {\n    display: block;\n  }\n`;\n\nconst Icon = styled.img`\n  max-width: 64px;\n  max-height: 64px;\n`;\n\nconst Temp = styled.h1`\n  color: ${(props) => props.theme.colors.dark};\n  font-size: ${(props) => props.theme.fontSizes.xlarge};\n  font-weight: bold;\n`;\n\nconst Label = styled.p`\n  color: ${(props) => props.theme.colors.gray};\n  font-size: ${(props) => props.theme.fontSizes.small};\n  text-transform: uppercase;\n  font-weight: 300;\n`;\n\nconst Value = styled(Label)`\n  color: ${(props) => props.theme.colors.dark};\n  font-weight: bold;\n  text-transform: none;\n`;\n\nexport const CurrentForecast = ({ data }) => {\n  return (\n    <DataContainer>\n      <Icon src={data.condition.icon} alt={data.condition.text} />\n\n      <Temp>{data.temp_c} &deg;C</Temp>\n\n      <div>\n        <Label>conditions</Label>\n        <Value>{data.condition.text}</Value>\n      </div>\n\n      <div>\n        <Label>feels like</Label>\n        <Value>{data.feelslike_c} &deg;C</Value>\n      </div>\n\n      <div>\n        <Label>pressure</Label>\n        <Value>{data.pressure_mb} hPa</Value>\n      </div>\n\n      <div>\n        <Label>wind</Label>\n        <Value>{data.wind_kph} km/h</Value>\n      </div>\n    </DataContainer>\n  );\n};\n\nCurrentForecast.propTypes = {\n  data: PropTypes.object,\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { Devices } from \"../../styles/Devices\";\n\nconst TableContainer = styled.div`\n  overflow-x: auto;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  margin: 2rem 0;\n  padding: 2rem;\n\n  @media ${Devices.mobile} {\n    padding: 1rem;\n  }\n`;\n\nconst Header = styled.thead`\n  background-color: ${(props) => props.theme.colors.lightGray};\n`;\n\nconst Row = styled.tr`\n  &:nth-of-type(2n) {\n    background-color: ${(props) => props.theme.colors.lightGray};\n  }\n`;\n\nconst Icon = styled.img`\n  max-width: 32px;\n  max-height: 32px;\n  margin-right: 0.5rem;\n`;\n\nconst TableHeading = styled.th`\n  padding: 2rem;\n\n  @media ${Devices.mobile} {\n    padding: 1rem;\n  }\n`;\n\nconst TableData = styled.td`\n  color: ${(props) => props.theme.colors.dark};\n  font-size: ${(props) => props.theme.fontSizes.small};\n  display: ${(props) => (props.condition ? \"flex\" : \"\")};\n  align-items: ${(props) => (props.condition ? \"center\" : \"\")};\n  padding: 2rem;\n\n  @media ${Devices.mobile} {\n    padding: 1rem;\n  }\n`;\n\nexport const FutureForecast = ({ data }) => {\n  const renderedRows = data.map((forecast) => (\n    <Row key={forecast.date_epoch}>\n      <TableData>{forecast.date}</TableData>\n      <TableData condition>\n        <Icon src={forecast.day.condition.icon} alt={forecast.day.condition.text} />\n        <span>{forecast.day.condition.text}</span>\n      </TableData>\n      <TableData>{forecast.day.avgtemp_c} &deg;C</TableData>\n      <TableData>{forecast.day.daily_chance_of_rain} %</TableData>\n      <TableData>{forecast.day.maxwind_kph} km/h</TableData>\n    </Row>\n  ));\n\n  return (\n    <TableContainer>\n      <Table>\n        <Header>\n          <Row>\n            <TableHeading>Date</TableHeading>\n            <TableHeading>Conditions</TableHeading>\n            <TableHeading>Temperature</TableHeading>\n            <TableHeading>Chance of rain</TableHeading>\n            <TableHeading>Wind</TableHeading>\n          </Row>\n        </Header>\n\n        <tbody>{renderedRows}</tbody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nFutureForecast.propTypes = {\n  data: PropTypes.array,\n};\n","import React from \"react\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport styled from \"styled-components\";\n\nconst LoaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Loader = () => {\n  return (\n    <LoaderContainer>\n      <BeatLoader size={15} loading={true} color={\"#1AA73A\"} />\n    </LoaderContainer>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { selectForecast, getForecast } from \"./forecastSlice\";\nimport { Title } from \"../../styles/globalStyles\";\nimport { CurrentForecast } from \"./CurrentForecast\";\nimport { FutureForecast } from \"./FutureForecast\";\nimport { Loader } from \"../../components/Loader\";\n\nconst ForecastContainer = styled.section`\n  padding: 20px;\n  background-color: ${(props) => props.theme.colors.light};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  border-radius: 10px;\n  margin-top: 50px;\n`;\n\nexport const Forecast = ({ city }) => {\n  const dispatch = useDispatch();\n\n  const forecastData = useSelector(selectForecast);\n  const forecastStatus = useSelector((state) => state.forecast.status);\n  const error = useSelector((state) => state.forecast.error);\n\n  useEffect(() => {\n    dispatch(getForecast(city));\n  }, [city, dispatch]);\n\n  let content;\n  switch (forecastStatus) {\n    case \"loading\":\n      content = <Loader />;\n      break;\n\n    case \"failed\":\n      content = <p>{error}</p>;\n      break;\n\n    case \"succeeded\":\n      content = (\n        <>\n          <Title>\n            {forecastData.location.name} ({forecastData.location.country}) -{\" \"}\n            {forecastData.current.last_updated}\n          </Title>\n          <CurrentForecast data={forecastData.current} />\n\n          <Title>Next {forecastData.forecast.forecastday.length - 1} days</Title>\n          <FutureForecast data={forecastData.forecast.forecastday.slice(1)} />\n        </>\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  return <ForecastContainer>{content}</ForecastContainer>;\n};\n\nForecast.propTypes = {\n  city: PropTypes.string,\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Container } from \"../../styles/globalStyles\";\nimport { SearchBar } from \"../SearchBar\";\nimport { Forecast } from \"../../features/forecast/Forecast\";\n\nconst PageContent = styled.section`\n  margin: 50px 0;\n`;\n\nexport const HomePage = () => {\n  const [city, setCity] = useState(\"\");\n\n  return (\n    <Container>\n      <PageContent>\n        <SearchBar changeCity={(newCity) => setCity(newCity)} />\n        {city && <Forecast city={city} />}\n      </PageContent>\n    </Container>\n  );\n};\n","import React from \"react\";\n\nimport { Theme } from \"../styles/Theme\";\nimport { Navbar } from \"./Navbar\";\nimport { HomePage } from \"./pages/HomePage\";\n\nexport const App = () => {\n  return (\n    <Theme>\n      <div>\n        <Navbar />\n        <HomePage />\n      </div>\n    </Theme>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport forecastReducer from \"./features/forecast/forecastSlice\";\n\nconst store = configureStore({\n  reducer: {\n    forecast: forecastReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}